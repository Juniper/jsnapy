name: Pylint

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8.12, 3.9.12, 3.10.12, 3.11.9, 3.12.4]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python ${{ matrix.python-version }}" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is ${{ matrix.python-version }}"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
        pip install -r development.txt
        python setup.py sdist
        ls dist/
        cp dist/jsnapy-*.dev0.tar.gz ../
        cd ../
        tar -xzvf jsnapy-*.dev0.tar.gz
        cd jsnapy-*.dev0
        python setup.py install
        

    - name: Analysing the code with pylint
      run: |
        pip install pylint
        sudo find ./lib/jnpr/jsnapy -type f -name "*.py" | xargs pylint | grep .
    
    - name: Run black tool
      run: |
        pip install -U black;
        black --check --diff --exclude="docs|build|tests|samples|venv" .
    
    - name: Run unit test
      run: |
        source venv/bin/activate
        pip install -r development.txt
        cd tests/unit
        nose2 --with-coverage -vvvv
