name: Pylint

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8.12]


    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python ${{ matrix.python-version }}" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is ${{ matrix.python-version }}"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Install dependencies
      run: |
        sudo python -m pip install --upgrade pip
        sudo python -m pip install pylint
        sudo python -m pip install -r requirements.txt
        sudo python -m pip install -r development.txt
        sudo python setup.py install

    - name: Analysing the code with pylint
      run: |
        sudo find . -type f -name "*.py" | xargs pylint | grep .
    
    - name: Run black tool
      run: |
        sudo python -m pip install -U black;
        sudo black --check --exclude="docs|build|tests|samples|venv" .
    
    - name: Run unit test
      run: |
        sudo pip install junos-eznc
        sudo nosetests -v --with-coverage --cover-package=jnpr.jsnapy --cover-inclusive -a tests/unit
